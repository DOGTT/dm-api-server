// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v3.14.0
// source: base-service.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 互动类型
type InteractionType int32

const (
	InteractionType_VIEW InteractionType = 0
	// 点赞
	InteractionType_LIKE InteractionType = 1
	// 标记
	InteractionType_MARK InteractionType = 2
)

// Enum value maps for InteractionType.
var (
	InteractionType_name = map[int32]string{
		0: "VIEW",
		1: "LIKE",
		2: "MARK",
	}
	InteractionType_value = map[string]int32{
		"VIEW": 0,
		"LIKE": 1,
		"MARK": 2,
	}
)

func (x InteractionType) Enum() *InteractionType {
	p := new(InteractionType)
	*p = x
	return p
}

func (x InteractionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InteractionType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_service_proto_enumTypes[0].Descriptor()
}

func (InteractionType) Type() protoreflect.EnumType {
	return &file_base_service_proto_enumTypes[0]
}

func (x InteractionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InteractionType.Descriptor instead.
func (InteractionType) EnumDescriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{0}
}

// 通用错误消息结构
type ErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Desc          string                 `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	mi := &file_base_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorMessage) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 登录请求
type WeChatLoginReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WxCode        string                 `protobuf:"bytes,1,opt,name=wx_code,json=wxCode,proto3" json:"wx_code,omitempty"` // 微信小程序登录时获取临时登录凭证code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeChatLoginReq) Reset() {
	*x = WeChatLoginReq{}
	mi := &file_base_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeChatLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeChatLoginReq) ProtoMessage() {}

func (x *WeChatLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeChatLoginReq.ProtoReflect.Descriptor instead.
func (*WeChatLoginReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{1}
}

func (x *WeChatLoginReq) GetWxCode() string {
	if x != nil {
		return x.WxCode
	}
	return ""
}

type WeChatLoginResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserInfo      *UserInfo              `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeChatLoginResp) Reset() {
	*x = WeChatLoginResp{}
	mi := &file_base_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeChatLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeChatLoginResp) ProtoMessage() {}

func (x *WeChatLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeChatLoginResp.ProtoReflect.Descriptor instead.
func (*WeChatLoginResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{2}
}

func (x *WeChatLoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WeChatLoginResp) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

// 快速注册请求
type WeChatRegisterFastReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WxCode        string                 `protobuf:"bytes,1,opt,name=wx_code,json=wxCode,proto3" json:"wx_code,omitempty"`
	Pet           *PetInfoReg            `protobuf:"bytes,2,opt,name=pet,proto3" json:"pet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeChatRegisterFastReq) Reset() {
	*x = WeChatRegisterFastReq{}
	mi := &file_base_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeChatRegisterFastReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeChatRegisterFastReq) ProtoMessage() {}

func (x *WeChatRegisterFastReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeChatRegisterFastReq.ProtoReflect.Descriptor instead.
func (*WeChatRegisterFastReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{3}
}

func (x *WeChatRegisterFastReq) GetWxCode() string {
	if x != nil {
		return x.WxCode
	}
	return ""
}

func (x *WeChatRegisterFastReq) GetPet() *PetInfoReg {
	if x != nil {
		return x.Pet
	}
	return nil
}

type WeChatRegisterFastResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserInfo      *UserInfo              `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeChatRegisterFastResp) Reset() {
	*x = WeChatRegisterFastResp{}
	mi := &file_base_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeChatRegisterFastResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeChatRegisterFastResp) ProtoMessage() {}

func (x *WeChatRegisterFastResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeChatRegisterFastResp.ProtoReflect.Descriptor instead.
func (*WeChatRegisterFastResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{4}
}

func (x *WeChatRegisterFastResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WeChatRegisterFastResp) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

// 通用地点搜索请求
type LocationCommonSearchReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         string                 `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationCommonSearchReq) Reset() {
	*x = LocationCommonSearchReq{}
	mi := &file_base_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationCommonSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationCommonSearchReq) ProtoMessage() {}

func (x *LocationCommonSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationCommonSearchReq.ProtoReflect.Descriptor instead.
func (*LocationCommonSearchReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{5}
}

func (x *LocationCommonSearchReq) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

type LocationCommonSearchResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationCommonSearchResp) Reset() {
	*x = LocationCommonSearchResp{}
	mi := &file_base_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationCommonSearchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationCommonSearchResp) ProtoMessage() {}

func (x *LocationCommonSearchResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationCommonSearchResp.ProtoReflect.Descriptor instead.
func (*LocationCommonSearchResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{6}
}

// 批量获取对象上传预签名URL请求
type MediaPutPresignURLBatchGetReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaType     MediaType              `protobuf:"varint,1,opt,name=media_type,json=mediaType,proto3,enum=common.MediaType" json:"media_type,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaPutPresignURLBatchGetReq) Reset() {
	*x = MediaPutPresignURLBatchGetReq{}
	mi := &file_base_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaPutPresignURLBatchGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaPutPresignURLBatchGetReq) ProtoMessage() {}

func (x *MediaPutPresignURLBatchGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaPutPresignURLBatchGetReq.ProtoReflect.Descriptor instead.
func (*MediaPutPresignURLBatchGetReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{7}
}

func (x *MediaPutPresignURLBatchGetReq) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MT_DEFAULT
}

func (x *MediaPutPresignURLBatchGetReq) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type MediaPutPresignURLBatchGetResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         []*MediaInfo           `protobuf:"bytes,1,rep,name=media,proto3" json:"media,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaPutPresignURLBatchGetResp) Reset() {
	*x = MediaPutPresignURLBatchGetResp{}
	mi := &file_base_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaPutPresignURLBatchGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaPutPresignURLBatchGetResp) ProtoMessage() {}

func (x *MediaPutPresignURLBatchGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaPutPresignURLBatchGetResp.ProtoReflect.Descriptor instead.
func (*MediaPutPresignURLBatchGetResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{8}
}

func (x *MediaPutPresignURLBatchGetResp) GetMedia() []*MediaInfo {
	if x != nil {
		return x.Media
	}
	return nil
}

type PofpTypeListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpTypeListReq) Reset() {
	*x = PofpTypeListReq{}
	mi := &file_base_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpTypeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpTypeListReq) ProtoMessage() {}

func (x *PofpTypeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpTypeListReq.ProtoReflect.Descriptor instead.
func (*PofpTypeListReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{9}
}

type PofpTypeListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PofpTypes     []*PofpTypeInfo        `protobuf:"bytes,1,rep,name=pofp_types,json=pofpTypes,proto3" json:"pofp_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpTypeListResp) Reset() {
	*x = PofpTypeListResp{}
	mi := &file_base_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpTypeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpTypeListResp) ProtoMessage() {}

func (x *PofpTypeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpTypeListResp.ProtoReflect.Descriptor instead.
func (*PofpTypeListResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{10}
}

func (x *PofpTypeListResp) GetPofpTypes() []*PofpTypeInfo {
	if x != nil {
		return x.PofpTypes
	}
	return nil
}

// 足迹创建
type PofpCreateReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pofp          *PofpInfo              `protobuf:"bytes,1,opt,name=pofp,proto3" json:"pofp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpCreateReq) Reset() {
	*x = PofpCreateReq{}
	mi := &file_base_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpCreateReq) ProtoMessage() {}

func (x *PofpCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpCreateReq.ProtoReflect.Descriptor instead.
func (*PofpCreateReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{11}
}

func (x *PofpCreateReq) GetPofp() *PofpInfo {
	if x != nil {
		return x.Pofp
	}
	return nil
}

type PofpCreateResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pofp          *PofpInfo              `protobuf:"bytes,1,opt,name=pofp,proto3" json:"pofp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpCreateResp) Reset() {
	*x = PofpCreateResp{}
	mi := &file_base_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpCreateResp) ProtoMessage() {}

func (x *PofpCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpCreateResp.ProtoReflect.Descriptor instead.
func (*PofpCreateResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{12}
}

func (x *PofpCreateResp) GetPofp() *PofpInfo {
	if x != nil {
		return x.Pofp
	}
	return nil
}

// 足迹更新
type PofpUpdateReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pofp          *PofpInfo              `protobuf:"bytes,1,opt,name=pofp,proto3" json:"pofp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpUpdateReq) Reset() {
	*x = PofpUpdateReq{}
	mi := &file_base_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpUpdateReq) ProtoMessage() {}

func (x *PofpUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpUpdateReq.ProtoReflect.Descriptor instead.
func (*PofpUpdateReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{13}
}

func (x *PofpUpdateReq) GetPofp() *PofpInfo {
	if x != nil {
		return x.Pofp
	}
	return nil
}

type PofpUpdateResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpUpdateResp) Reset() {
	*x = PofpUpdateResp{}
	mi := &file_base_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpUpdateResp) ProtoMessage() {}

func (x *PofpUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpUpdateResp.ProtoReflect.Descriptor instead.
func (*PofpUpdateResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{14}
}

// 足迹删除
type PofpDeleteReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpDeleteReq) Reset() {
	*x = PofpDeleteReq{}
	mi := &file_base_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpDeleteReq) ProtoMessage() {}

func (x *PofpDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpDeleteReq.ProtoReflect.Descriptor instead.
func (*PofpDeleteReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{15}
}

func (x *PofpDeleteReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type PofpDeleteResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpDeleteResp) Reset() {
	*x = PofpDeleteResp{}
	mi := &file_base_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpDeleteResp) ProtoMessage() {}

func (x *PofpDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpDeleteResp.ProtoReflect.Descriptor instead.
func (*PofpDeleteResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{16}
}

type PofpBaseQueryByBoundReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 足迹类型id列表
	TypeIds []int32 `protobuf:"varint,1,rep,packed,name=type_ids,json=typeIds,proto3" json:"type_ids,omitempty"`
	// 坐标范围
	Bound         *BoundCoord `protobuf:"bytes,2,opt,name=bound,proto3" json:"bound,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpBaseQueryByBoundReq) Reset() {
	*x = PofpBaseQueryByBoundReq{}
	mi := &file_base_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpBaseQueryByBoundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpBaseQueryByBoundReq) ProtoMessage() {}

func (x *PofpBaseQueryByBoundReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpBaseQueryByBoundReq.ProtoReflect.Descriptor instead.
func (*PofpBaseQueryByBoundReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{17}
}

func (x *PofpBaseQueryByBoundReq) GetTypeIds() []int32 {
	if x != nil {
		return x.TypeIds
	}
	return nil
}

func (x *PofpBaseQueryByBoundReq) GetBound() *BoundCoord {
	if x != nil {
		return x.Bound
	}
	return nil
}

type PofpBaseQueryByBoundResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pofps         []*PofpInfo            `protobuf:"bytes,1,rep,name=pofps,proto3" json:"pofps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpBaseQueryByBoundResp) Reset() {
	*x = PofpBaseQueryByBoundResp{}
	mi := &file_base_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpBaseQueryByBoundResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpBaseQueryByBoundResp) ProtoMessage() {}

func (x *PofpBaseQueryByBoundResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpBaseQueryByBoundResp.ProtoReflect.Descriptor instead.
func (*PofpBaseQueryByBoundResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{18}
}

func (x *PofpBaseQueryByBoundResp) GetPofps() []*PofpInfo {
	if x != nil {
		return x.Pofps
	}
	return nil
}

type PofpDetailQueryByIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpDetailQueryByIdReq) Reset() {
	*x = PofpDetailQueryByIdReq{}
	mi := &file_base_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpDetailQueryByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpDetailQueryByIdReq) ProtoMessage() {}

func (x *PofpDetailQueryByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpDetailQueryByIdReq.ProtoReflect.Descriptor instead.
func (*PofpDetailQueryByIdReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{19}
}

func (x *PofpDetailQueryByIdReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type PofpDetailQueryByIdResp struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Pofp            *PofpInfo              `protobuf:"bytes,1,opt,name=pofp,proto3" json:"pofp,omitempty"`
	PofpDynamicInfo *PofpDynamicInfo       `protobuf:"bytes,2,opt,name=pofp_dynamic_info,json=pofpDynamicInfo,proto3" json:"pofp_dynamic_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PofpDetailQueryByIdResp) Reset() {
	*x = PofpDetailQueryByIdResp{}
	mi := &file_base_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpDetailQueryByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpDetailQueryByIdResp) ProtoMessage() {}

func (x *PofpDetailQueryByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpDetailQueryByIdResp.ProtoReflect.Descriptor instead.
func (*PofpDetailQueryByIdResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{20}
}

func (x *PofpDetailQueryByIdResp) GetPofp() *PofpInfo {
	if x != nil {
		return x.Pofp
	}
	return nil
}

func (x *PofpDetailQueryByIdResp) GetPofpDynamicInfo() *PofpDynamicInfo {
	if x != nil {
		return x.PofpDynamicInfo
	}
	return nil
}

type PofpFullQueryByIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpFullQueryByIdReq) Reset() {
	*x = PofpFullQueryByIdReq{}
	mi := &file_base_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpFullQueryByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpFullQueryByIdReq) ProtoMessage() {}

func (x *PofpFullQueryByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpFullQueryByIdReq.ProtoReflect.Descriptor instead.
func (*PofpFullQueryByIdReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{21}
}

func (x *PofpFullQueryByIdReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type PofpFullQueryByIdResp struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Pofp            *PofpInfo              `protobuf:"bytes,1,opt,name=pofp,proto3" json:"pofp,omitempty"`
	PofpDynamicInfo *PofpDynamicInfo       `protobuf:"bytes,2,opt,name=pofp_dynamic_info,json=pofpDynamicInfo,proto3" json:"pofp_dynamic_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PofpFullQueryByIdResp) Reset() {
	*x = PofpFullQueryByIdResp{}
	mi := &file_base_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpFullQueryByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpFullQueryByIdResp) ProtoMessage() {}

func (x *PofpFullQueryByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpFullQueryByIdResp.ProtoReflect.Descriptor instead.
func (*PofpFullQueryByIdResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{22}
}

func (x *PofpFullQueryByIdResp) GetPofp() *PofpInfo {
	if x != nil {
		return x.Pofp
	}
	return nil
}

func (x *PofpFullQueryByIdResp) GetPofpDynamicInfo() *PofpDynamicInfo {
	if x != nil {
		return x.PofpDynamicInfo
	}
	return nil
}

type PofpInteractionReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Uuid  string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 互动类型
	IxnType       InteractionType `protobuf:"varint,2,opt,name=ixn_type,json=ixnType,proto3,enum=base_service.v1.InteractionType" json:"ixn_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpInteractionReq) Reset() {
	*x = PofpInteractionReq{}
	mi := &file_base_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpInteractionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpInteractionReq) ProtoMessage() {}

func (x *PofpInteractionReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpInteractionReq.ProtoReflect.Descriptor instead.
func (*PofpInteractionReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{23}
}

func (x *PofpInteractionReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PofpInteractionReq) GetIxnType() InteractionType {
	if x != nil {
		return x.IxnType
	}
	return InteractionType_VIEW
}

type PofpInteractionResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpInteractionResp) Reset() {
	*x = PofpInteractionResp{}
	mi := &file_base_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpInteractionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpInteractionResp) ProtoMessage() {}

func (x *PofpInteractionResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpInteractionResp.ProtoReflect.Descriptor instead.
func (*PofpInteractionResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{24}
}

type PofpCommentReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *PofpCommentInfo       `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpCommentReq) Reset() {
	*x = PofpCommentReq{}
	mi := &file_base_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpCommentReq) ProtoMessage() {}

func (x *PofpCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpCommentReq.ProtoReflect.Descriptor instead.
func (*PofpCommentReq) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{25}
}

func (x *PofpCommentReq) GetComment() *PofpCommentInfo {
	if x != nil {
		return x.Comment
	}
	return nil
}

type PofpCommentResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PofpCommentResp) Reset() {
	*x = PofpCommentResp{}
	mi := &file_base_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PofpCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PofpCommentResp) ProtoMessage() {}

func (x *PofpCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_base_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PofpCommentResp.ProtoReflect.Descriptor instead.
func (*PofpCommentResp) Descriptor() ([]byte, []int) {
	return file_base_service_proto_rawDescGZIP(), []int{26}
}

var File_base_service_proto protoreflect.FileDescriptor

var file_base_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x70, 0x6f, 0x66, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x0c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x22, 0x29, 0x0a, 0x0e, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x54, 0x0a, 0x0f,
	0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x54, 0x0a, 0x15, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x46, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x77,
	0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x78,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x70, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x67, 0x52, 0x03, 0x70, 0x65, 0x74, 0x22, 0x5b, 0x0a, 0x16, 0x57, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2f, 0x0a, 0x17, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x67, 0x0a, 0x1d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x75, 0x74, 0x50, 0x72,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x52, 0x4c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x1e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x50, 0x75, 0x74, 0x50, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x52,
	0x4c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a,
	0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22, 0x11, 0x0a, 0x0f, 0x50, 0x6f, 0x66, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x45, 0x0a, 0x10, 0x50, 0x6f, 0x66,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a,
	0x0a, 0x70, 0x6f, 0x66, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x66, 0x70, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x6f, 0x66, 0x70, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x22, 0x33, 0x0a, 0x0d, 0x50, 0x6f, 0x66, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x6f, 0x66, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x6f, 0x66, 0x70, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x6f, 0x66, 0x70, 0x22, 0x34, 0x0a, 0x0e, 0x50, 0x6f, 0x66, 0x70, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x6f, 0x66, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x66, 0x70, 0x2e, 0x50, 0x6f, 0x66,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x6f, 0x66, 0x70, 0x22, 0x33, 0x0a, 0x0d, 0x50,
	0x6f, 0x66, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x04,
	0x70, 0x6f, 0x66, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x66,
	0x70, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x6f, 0x66, 0x70,
	0x22, 0x10, 0x0a, 0x0e, 0x50, 0x6f, 0x66, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x23, 0x0a, 0x0d, 0x50, 0x6f, 0x66, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x50, 0x6f, 0x66, 0x70, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5e, 0x0a, 0x17, 0x50, 0x6f, 0x66,
	0x70, 0x42, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x28, 0x0a, 0x05, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x40, 0x0a, 0x18, 0x50, 0x6f, 0x66,
	0x70, 0x42, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x6f, 0x66, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x66, 0x70, 0x2e, 0x50, 0x6f, 0x66, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70, 0x6f, 0x66, 0x70, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x50,
	0x6f, 0x66, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x50, 0x6f,
	0x66, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x6f, 0x66, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x66, 0x70, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x6f, 0x66, 0x70, 0x12, 0x41, 0x0a, 0x11, 0x70, 0x6f, 0x66,
	0x70, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6f, 0x66, 0x70, 0x2e, 0x50, 0x6f, 0x66, 0x70,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x70, 0x6f, 0x66,
	0x70, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2a, 0x0a, 0x14,
	0x50, 0x6f, 0x66, 0x70, 0x46, 0x75, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x7e, 0x0a, 0x15, 0x50, 0x6f, 0x66, 0x70,
	0x46, 0x75, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x6f, 0x66, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x6f, 0x66, 0x70, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x6f, 0x66, 0x70, 0x12, 0x41, 0x0a, 0x11, 0x70, 0x6f, 0x66, 0x70, 0x5f, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x6f, 0x66, 0x70, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x70, 0x6f, 0x66, 0x70, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x12, 0x50, 0x6f, 0x66, 0x70,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x69, 0x78, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x69, 0x78, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x15, 0x0a, 0x13, 0x50, 0x6f, 0x66, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x41, 0x0a, 0x0e, 0x50, 0x6f, 0x66, 0x70, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6f, 0x66, 0x70,
	0x2e, 0x50, 0x6f, 0x66, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x50, 0x6f, 0x66,
	0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2a, 0x2f, 0x0a, 0x0f,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x56, 0x49, 0x45, 0x57, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4b,
	0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x52, 0x4b, 0x10, 0x02, 0x32, 0xec, 0x0c,
	0x0a, 0x0b, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a,
	0x0b, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x78, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x86, 0x01,
	0x0a, 0x12, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x46, 0x61, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a,
	0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x78, 0x2f, 0x72, 0x65,
	0x67, 0x2f, 0x66, 0x61, 0x73, 0x74, 0x12, 0x88, 0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x28, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0xa6, 0x01, 0x0a, 0x1a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x75, 0x74, 0x50, 0x72,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x52, 0x4c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74,
	0x12, 0x2e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x75, 0x74, 0x50, 0x72, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x55, 0x52, 0x4c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x2f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x75, 0x74, 0x50, 0x72, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x55, 0x52, 0x4c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2f, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x12, 0x6a, 0x0a, 0x0c, 0x50, 0x6f,
	0x66, 0x70, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x66,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x66, 0x70, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x70,
	0x66, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x0a, 0x50, 0x6f, 0x66, 0x70, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a,
	0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x70, 0x66, 0x12, 0x62, 0x0a, 0x0a, 0x50, 0x6f,
	0x66, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0d, 0x3a, 0x01, 0x2a, 0x1a, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x70, 0x66, 0x12, 0x5f,
	0x0a, 0x0a, 0x50, 0x6f, 0x66, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x66, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x66, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x10, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x2a, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x70, 0x66, 0x12,
	0x94, 0x01, 0x0a, 0x14, 0x50, 0x6f, 0x66, 0x70, 0x42, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x79, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x28, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x42,
	0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x29, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x42, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x42, 0x79, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f,
	0x70, 0x66, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x62, 0x79,
	0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x8d, 0x01, 0x0a, 0x13, 0x50, 0x6f, 0x66, 0x70, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x27,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x66, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x6f, 0x70, 0x66, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x85, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x66, 0x70, 0x46,
	0x75, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x66, 0x70, 0x46, 0x75, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x46, 0x75, 0x6c, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x70, 0x66, 0x2f, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x7d,
	0x0a, 0x0f, 0x50, 0x6f, 0x66, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x66, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x70,
	0x66, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d, 0x0a,
	0x0b, 0x50, 0x6f, 0x66, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x66, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x66, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x6f, 0x70, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x2d, 0x5a, 0x2b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x4f, 0x47, 0x54, 0x54,
	0x2f, 0x64, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_base_service_proto_rawDescOnce sync.Once
	file_base_service_proto_rawDescData = file_base_service_proto_rawDesc
)

func file_base_service_proto_rawDescGZIP() []byte {
	file_base_service_proto_rawDescOnce.Do(func() {
		file_base_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_service_proto_rawDescData)
	})
	return file_base_service_proto_rawDescData
}

var file_base_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_base_service_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_base_service_proto_goTypes = []any{
	(InteractionType)(0),                   // 0: base_service.v1.InteractionType
	(*ErrorMessage)(nil),                   // 1: base_service.v1.ErrorMessage
	(*WeChatLoginReq)(nil),                 // 2: base_service.v1.WeChatLoginReq
	(*WeChatLoginResp)(nil),                // 3: base_service.v1.WeChatLoginResp
	(*WeChatRegisterFastReq)(nil),          // 4: base_service.v1.WeChatRegisterFastReq
	(*WeChatRegisterFastResp)(nil),         // 5: base_service.v1.WeChatRegisterFastResp
	(*LocationCommonSearchReq)(nil),        // 6: base_service.v1.LocationCommonSearchReq
	(*LocationCommonSearchResp)(nil),       // 7: base_service.v1.LocationCommonSearchResp
	(*MediaPutPresignURLBatchGetReq)(nil),  // 8: base_service.v1.MediaPutPresignURLBatchGetReq
	(*MediaPutPresignURLBatchGetResp)(nil), // 9: base_service.v1.MediaPutPresignURLBatchGetResp
	(*PofpTypeListReq)(nil),                // 10: base_service.v1.PofpTypeListReq
	(*PofpTypeListResp)(nil),               // 11: base_service.v1.PofpTypeListResp
	(*PofpCreateReq)(nil),                  // 12: base_service.v1.PofpCreateReq
	(*PofpCreateResp)(nil),                 // 13: base_service.v1.PofpCreateResp
	(*PofpUpdateReq)(nil),                  // 14: base_service.v1.PofpUpdateReq
	(*PofpUpdateResp)(nil),                 // 15: base_service.v1.PofpUpdateResp
	(*PofpDeleteReq)(nil),                  // 16: base_service.v1.PofpDeleteReq
	(*PofpDeleteResp)(nil),                 // 17: base_service.v1.PofpDeleteResp
	(*PofpBaseQueryByBoundReq)(nil),        // 18: base_service.v1.PofpBaseQueryByBoundReq
	(*PofpBaseQueryByBoundResp)(nil),       // 19: base_service.v1.PofpBaseQueryByBoundResp
	(*PofpDetailQueryByIdReq)(nil),         // 20: base_service.v1.PofpDetailQueryByIdReq
	(*PofpDetailQueryByIdResp)(nil),        // 21: base_service.v1.PofpDetailQueryByIdResp
	(*PofpFullQueryByIdReq)(nil),           // 22: base_service.v1.PofpFullQueryByIdReq
	(*PofpFullQueryByIdResp)(nil),          // 23: base_service.v1.PofpFullQueryByIdResp
	(*PofpInteractionReq)(nil),             // 24: base_service.v1.PofpInteractionReq
	(*PofpInteractionResp)(nil),            // 25: base_service.v1.PofpInteractionResp
	(*PofpCommentReq)(nil),                 // 26: base_service.v1.PofpCommentReq
	(*PofpCommentResp)(nil),                // 27: base_service.v1.PofpCommentResp
	(*UserInfo)(nil),                       // 28: user.UserInfo
	(*PetInfoReg)(nil),                     // 29: user.PetInfoReg
	(MediaType)(0),                         // 30: common.MediaType
	(*MediaInfo)(nil),                      // 31: common.MediaInfo
	(*PofpTypeInfo)(nil),                   // 32: pofp.PofpTypeInfo
	(*PofpInfo)(nil),                       // 33: pofp.PofpInfo
	(*BoundCoord)(nil),                     // 34: common.BoundCoord
	(*PofpDynamicInfo)(nil),                // 35: pofp.PofpDynamicInfo
	(*PofpCommentInfo)(nil),                // 36: pofp.PofpCommentInfo
}
var file_base_service_proto_depIdxs = []int32{
	28, // 0: base_service.v1.WeChatLoginResp.user_info:type_name -> user.UserInfo
	29, // 1: base_service.v1.WeChatRegisterFastReq.pet:type_name -> user.PetInfoReg
	28, // 2: base_service.v1.WeChatRegisterFastResp.user_info:type_name -> user.UserInfo
	30, // 3: base_service.v1.MediaPutPresignURLBatchGetReq.media_type:type_name -> common.MediaType
	31, // 4: base_service.v1.MediaPutPresignURLBatchGetResp.media:type_name -> common.MediaInfo
	32, // 5: base_service.v1.PofpTypeListResp.pofp_types:type_name -> pofp.PofpTypeInfo
	33, // 6: base_service.v1.PofpCreateReq.pofp:type_name -> pofp.PofpInfo
	33, // 7: base_service.v1.PofpCreateResp.pofp:type_name -> pofp.PofpInfo
	33, // 8: base_service.v1.PofpUpdateReq.pofp:type_name -> pofp.PofpInfo
	34, // 9: base_service.v1.PofpBaseQueryByBoundReq.bound:type_name -> common.BoundCoord
	33, // 10: base_service.v1.PofpBaseQueryByBoundResp.pofps:type_name -> pofp.PofpInfo
	33, // 11: base_service.v1.PofpDetailQueryByIdResp.pofp:type_name -> pofp.PofpInfo
	35, // 12: base_service.v1.PofpDetailQueryByIdResp.pofp_dynamic_info:type_name -> pofp.PofpDynamicInfo
	33, // 13: base_service.v1.PofpFullQueryByIdResp.pofp:type_name -> pofp.PofpInfo
	35, // 14: base_service.v1.PofpFullQueryByIdResp.pofp_dynamic_info:type_name -> pofp.PofpDynamicInfo
	0,  // 15: base_service.v1.PofpInteractionReq.ixn_type:type_name -> base_service.v1.InteractionType
	36, // 16: base_service.v1.PofpCommentReq.comment:type_name -> pofp.PofpCommentInfo
	2,  // 17: base_service.v1.BaseService.WeChatLogin:input_type -> base_service.v1.WeChatLoginReq
	4,  // 18: base_service.v1.BaseService.WeChatRegisterFast:input_type -> base_service.v1.WeChatRegisterFastReq
	6,  // 19: base_service.v1.BaseService.LocationCommonSearch:input_type -> base_service.v1.LocationCommonSearchReq
	8,  // 20: base_service.v1.BaseService.MediaPutPresignURLBatchGet:input_type -> base_service.v1.MediaPutPresignURLBatchGetReq
	10, // 21: base_service.v1.BaseService.PofpTypeList:input_type -> base_service.v1.PofpTypeListReq
	12, // 22: base_service.v1.BaseService.PofpCreate:input_type -> base_service.v1.PofpCreateReq
	14, // 23: base_service.v1.BaseService.PofpUpdate:input_type -> base_service.v1.PofpUpdateReq
	16, // 24: base_service.v1.BaseService.PofpDelete:input_type -> base_service.v1.PofpDeleteReq
	18, // 25: base_service.v1.BaseService.PofpBaseQueryByBound:input_type -> base_service.v1.PofpBaseQueryByBoundReq
	20, // 26: base_service.v1.BaseService.PofpDetailQueryById:input_type -> base_service.v1.PofpDetailQueryByIdReq
	22, // 27: base_service.v1.BaseService.PofpFullQueryById:input_type -> base_service.v1.PofpFullQueryByIdReq
	24, // 28: base_service.v1.BaseService.PofpInteraction:input_type -> base_service.v1.PofpInteractionReq
	26, // 29: base_service.v1.BaseService.PofpComment:input_type -> base_service.v1.PofpCommentReq
	3,  // 30: base_service.v1.BaseService.WeChatLogin:output_type -> base_service.v1.WeChatLoginResp
	5,  // 31: base_service.v1.BaseService.WeChatRegisterFast:output_type -> base_service.v1.WeChatRegisterFastResp
	7,  // 32: base_service.v1.BaseService.LocationCommonSearch:output_type -> base_service.v1.LocationCommonSearchResp
	9,  // 33: base_service.v1.BaseService.MediaPutPresignURLBatchGet:output_type -> base_service.v1.MediaPutPresignURLBatchGetResp
	11, // 34: base_service.v1.BaseService.PofpTypeList:output_type -> base_service.v1.PofpTypeListResp
	13, // 35: base_service.v1.BaseService.PofpCreate:output_type -> base_service.v1.PofpCreateResp
	15, // 36: base_service.v1.BaseService.PofpUpdate:output_type -> base_service.v1.PofpUpdateResp
	17, // 37: base_service.v1.BaseService.PofpDelete:output_type -> base_service.v1.PofpDeleteResp
	19, // 38: base_service.v1.BaseService.PofpBaseQueryByBound:output_type -> base_service.v1.PofpBaseQueryByBoundResp
	21, // 39: base_service.v1.BaseService.PofpDetailQueryById:output_type -> base_service.v1.PofpDetailQueryByIdResp
	23, // 40: base_service.v1.BaseService.PofpFullQueryById:output_type -> base_service.v1.PofpFullQueryByIdResp
	25, // 41: base_service.v1.BaseService.PofpInteraction:output_type -> base_service.v1.PofpInteractionResp
	27, // 42: base_service.v1.BaseService.PofpComment:output_type -> base_service.v1.PofpCommentResp
	30, // [30:43] is the sub-list for method output_type
	17, // [17:30] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_base_service_proto_init() }
func file_base_service_proto_init() {
	if File_base_service_proto != nil {
		return
	}
	file_common_proto_init()
	file_pofp_proto_init()
	file_user_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_base_service_proto_goTypes,
		DependencyIndexes: file_base_service_proto_depIdxs,
		EnumInfos:         file_base_service_proto_enumTypes,
		MessageInfos:      file_base_service_proto_msgTypes,
	}.Build()
	File_base_service_proto = out.File
	file_base_service_proto_rawDesc = nil
	file_base_service_proto_goTypes = nil
	file_base_service_proto_depIdxs = nil
}
