// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.14.0
// source: base-service.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	BaseService_WeChatLogin_FullMethodName                = "/base_service.v1.BaseService/WeChatLogin"
	BaseService_WeChatRegisterFast_FullMethodName         = "/base_service.v1.BaseService/WeChatRegisterFast"
	BaseService_LocationCommonSearch_FullMethodName       = "/base_service.v1.BaseService/LocationCommonSearch"
	BaseService_MediaPutPresignURLBatchGet_FullMethodName = "/base_service.v1.BaseService/MediaPutPresignURLBatchGet"
	BaseService_PofpTypeList_FullMethodName               = "/base_service.v1.BaseService/PofpTypeList"
	BaseService_PofpCreate_FullMethodName                 = "/base_service.v1.BaseService/PofpCreate"
	BaseService_PofpUpdate_FullMethodName                 = "/base_service.v1.BaseService/PofpUpdate"
	BaseService_PofpDelete_FullMethodName                 = "/base_service.v1.BaseService/PofpDelete"
	BaseService_PofpBaseQueryByBound_FullMethodName       = "/base_service.v1.BaseService/PofpBaseQueryByBound"
	BaseService_PofpDetailQueryById_FullMethodName        = "/base_service.v1.BaseService/PofpDetailQueryById"
	BaseService_PofpFullQueryById_FullMethodName          = "/base_service.v1.BaseService/PofpFullQueryById"
	BaseService_PofpInteraction_FullMethodName            = "/base_service.v1.BaseService/PofpInteraction"
	BaseService_PofpComment_FullMethodName                = "/base_service.v1.BaseService/PofpComment"
)

// BaseServiceClient is the client API for BaseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
type BaseServiceClient interface {
	// 微信小程序登录接口
	// @security BearerAuth
	WeChatLogin(ctx context.Context, in *WeChatLoginReq, opts ...grpc.CallOption) (*WeChatLoginResp, error)
	// 微信小程序快速登录注册接口定义
	WeChatRegisterFast(ctx context.Context, in *WeChatRegisterFastReq, opts ...grpc.CallOption) (*WeChatRegisterFastResp, error)
	// 通用地点搜索
	LocationCommonSearch(ctx context.Context, in *LocationCommonSearchReq, opts ...grpc.CallOption) (*LocationCommonSearchResp, error)
	// 批量获取对象上传预签名URL
	MediaPutPresignURLBatchGet(ctx context.Context, in *MediaPutPresignURLBatchGetReq, opts ...grpc.CallOption) (*MediaPutPresignURLBatchGetResp, error)
	// 列表查询足迹频道类型
	PofpTypeList(ctx context.Context, in *PofpTypeListReq, opts ...grpc.CallOption) (*PofpTypeListResp, error)
	// 创建足迹频道
	PofpCreate(ctx context.Context, in *PofpCreateReq, opts ...grpc.CallOption) (*PofpCreateResp, error)
	// 更新足迹频道
	PofpUpdate(ctx context.Context, in *PofpUpdateReq, opts ...grpc.CallOption) (*PofpUpdateResp, error)
	// 删除足迹频道
	PofpDelete(ctx context.Context, in *PofpDeleteReq, opts ...grpc.CallOption) (*PofpDeleteResp, error)
	// 按照范围查询足迹基础信息
	PofpBaseQueryByBound(ctx context.Context, in *PofpBaseQueryByBoundReq, opts ...grpc.CallOption) (*PofpBaseQueryByBoundResp, error)
	// 按照id查询足迹简要信息
	PofpDetailQueryById(ctx context.Context, in *PofpDetailQueryByIdReq, opts ...grpc.CallOption) (*PofpDetailQueryByIdResp, error)
	// 按照id查询足迹页完整信息
	PofpFullQueryById(ctx context.Context, in *PofpFullQueryByIdReq, opts ...grpc.CallOption) (*PofpFullQueryByIdResp, error)
	// 足迹频道互动
	PofpInteraction(ctx context.Context, in *PofpInteractionReq, opts ...grpc.CallOption) (*PofpInteractionResp, error)
	// 足迹频道评论
	PofpComment(ctx context.Context, in *PofpCommentReq, opts ...grpc.CallOption) (*PofpCommentResp, error)
}

type baseServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBaseServiceClient(cc grpc.ClientConnInterface) BaseServiceClient {
	return &baseServiceClient{cc}
}

func (c *baseServiceClient) WeChatLogin(ctx context.Context, in *WeChatLoginReq, opts ...grpc.CallOption) (*WeChatLoginResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WeChatLoginResp)
	err := c.cc.Invoke(ctx, BaseService_WeChatLogin_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) WeChatRegisterFast(ctx context.Context, in *WeChatRegisterFastReq, opts ...grpc.CallOption) (*WeChatRegisterFastResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WeChatRegisterFastResp)
	err := c.cc.Invoke(ctx, BaseService_WeChatRegisterFast_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) LocationCommonSearch(ctx context.Context, in *LocationCommonSearchReq, opts ...grpc.CallOption) (*LocationCommonSearchResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(LocationCommonSearchResp)
	err := c.cc.Invoke(ctx, BaseService_LocationCommonSearch_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) MediaPutPresignURLBatchGet(ctx context.Context, in *MediaPutPresignURLBatchGetReq, opts ...grpc.CallOption) (*MediaPutPresignURLBatchGetResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(MediaPutPresignURLBatchGetResp)
	err := c.cc.Invoke(ctx, BaseService_MediaPutPresignURLBatchGet_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) PofpTypeList(ctx context.Context, in *PofpTypeListReq, opts ...grpc.CallOption) (*PofpTypeListResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PofpTypeListResp)
	err := c.cc.Invoke(ctx, BaseService_PofpTypeList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) PofpCreate(ctx context.Context, in *PofpCreateReq, opts ...grpc.CallOption) (*PofpCreateResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PofpCreateResp)
	err := c.cc.Invoke(ctx, BaseService_PofpCreate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) PofpUpdate(ctx context.Context, in *PofpUpdateReq, opts ...grpc.CallOption) (*PofpUpdateResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PofpUpdateResp)
	err := c.cc.Invoke(ctx, BaseService_PofpUpdate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) PofpDelete(ctx context.Context, in *PofpDeleteReq, opts ...grpc.CallOption) (*PofpDeleteResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PofpDeleteResp)
	err := c.cc.Invoke(ctx, BaseService_PofpDelete_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) PofpBaseQueryByBound(ctx context.Context, in *PofpBaseQueryByBoundReq, opts ...grpc.CallOption) (*PofpBaseQueryByBoundResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PofpBaseQueryByBoundResp)
	err := c.cc.Invoke(ctx, BaseService_PofpBaseQueryByBound_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) PofpDetailQueryById(ctx context.Context, in *PofpDetailQueryByIdReq, opts ...grpc.CallOption) (*PofpDetailQueryByIdResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PofpDetailQueryByIdResp)
	err := c.cc.Invoke(ctx, BaseService_PofpDetailQueryById_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) PofpFullQueryById(ctx context.Context, in *PofpFullQueryByIdReq, opts ...grpc.CallOption) (*PofpFullQueryByIdResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PofpFullQueryByIdResp)
	err := c.cc.Invoke(ctx, BaseService_PofpFullQueryById_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) PofpInteraction(ctx context.Context, in *PofpInteractionReq, opts ...grpc.CallOption) (*PofpInteractionResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PofpInteractionResp)
	err := c.cc.Invoke(ctx, BaseService_PofpInteraction_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseServiceClient) PofpComment(ctx context.Context, in *PofpCommentReq, opts ...grpc.CallOption) (*PofpCommentResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PofpCommentResp)
	err := c.cc.Invoke(ctx, BaseService_PofpComment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BaseServiceServer is the server API for BaseService service.
// All implementations must embed UnimplementedBaseServiceServer
// for forward compatibility.
//
// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
type BaseServiceServer interface {
	// 微信小程序登录接口
	// @security BearerAuth
	WeChatLogin(context.Context, *WeChatLoginReq) (*WeChatLoginResp, error)
	// 微信小程序快速登录注册接口定义
	WeChatRegisterFast(context.Context, *WeChatRegisterFastReq) (*WeChatRegisterFastResp, error)
	// 通用地点搜索
	LocationCommonSearch(context.Context, *LocationCommonSearchReq) (*LocationCommonSearchResp, error)
	// 批量获取对象上传预签名URL
	MediaPutPresignURLBatchGet(context.Context, *MediaPutPresignURLBatchGetReq) (*MediaPutPresignURLBatchGetResp, error)
	// 列表查询足迹频道类型
	PofpTypeList(context.Context, *PofpTypeListReq) (*PofpTypeListResp, error)
	// 创建足迹频道
	PofpCreate(context.Context, *PofpCreateReq) (*PofpCreateResp, error)
	// 更新足迹频道
	PofpUpdate(context.Context, *PofpUpdateReq) (*PofpUpdateResp, error)
	// 删除足迹频道
	PofpDelete(context.Context, *PofpDeleteReq) (*PofpDeleteResp, error)
	// 按照范围查询足迹基础信息
	PofpBaseQueryByBound(context.Context, *PofpBaseQueryByBoundReq) (*PofpBaseQueryByBoundResp, error)
	// 按照id查询足迹简要信息
	PofpDetailQueryById(context.Context, *PofpDetailQueryByIdReq) (*PofpDetailQueryByIdResp, error)
	// 按照id查询足迹页完整信息
	PofpFullQueryById(context.Context, *PofpFullQueryByIdReq) (*PofpFullQueryByIdResp, error)
	// 足迹频道互动
	PofpInteraction(context.Context, *PofpInteractionReq) (*PofpInteractionResp, error)
	// 足迹频道评论
	PofpComment(context.Context, *PofpCommentReq) (*PofpCommentResp, error)
	mustEmbedUnimplementedBaseServiceServer()
}

// UnimplementedBaseServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedBaseServiceServer struct{}

func (UnimplementedBaseServiceServer) WeChatLogin(context.Context, *WeChatLoginReq) (*WeChatLoginResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WeChatLogin not implemented")
}
func (UnimplementedBaseServiceServer) WeChatRegisterFast(context.Context, *WeChatRegisterFastReq) (*WeChatRegisterFastResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WeChatRegisterFast not implemented")
}
func (UnimplementedBaseServiceServer) LocationCommonSearch(context.Context, *LocationCommonSearchReq) (*LocationCommonSearchResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LocationCommonSearch not implemented")
}
func (UnimplementedBaseServiceServer) MediaPutPresignURLBatchGet(context.Context, *MediaPutPresignURLBatchGetReq) (*MediaPutPresignURLBatchGetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MediaPutPresignURLBatchGet not implemented")
}
func (UnimplementedBaseServiceServer) PofpTypeList(context.Context, *PofpTypeListReq) (*PofpTypeListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PofpTypeList not implemented")
}
func (UnimplementedBaseServiceServer) PofpCreate(context.Context, *PofpCreateReq) (*PofpCreateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PofpCreate not implemented")
}
func (UnimplementedBaseServiceServer) PofpUpdate(context.Context, *PofpUpdateReq) (*PofpUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PofpUpdate not implemented")
}
func (UnimplementedBaseServiceServer) PofpDelete(context.Context, *PofpDeleteReq) (*PofpDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PofpDelete not implemented")
}
func (UnimplementedBaseServiceServer) PofpBaseQueryByBound(context.Context, *PofpBaseQueryByBoundReq) (*PofpBaseQueryByBoundResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PofpBaseQueryByBound not implemented")
}
func (UnimplementedBaseServiceServer) PofpDetailQueryById(context.Context, *PofpDetailQueryByIdReq) (*PofpDetailQueryByIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PofpDetailQueryById not implemented")
}
func (UnimplementedBaseServiceServer) PofpFullQueryById(context.Context, *PofpFullQueryByIdReq) (*PofpFullQueryByIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PofpFullQueryById not implemented")
}
func (UnimplementedBaseServiceServer) PofpInteraction(context.Context, *PofpInteractionReq) (*PofpInteractionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PofpInteraction not implemented")
}
func (UnimplementedBaseServiceServer) PofpComment(context.Context, *PofpCommentReq) (*PofpCommentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PofpComment not implemented")
}
func (UnimplementedBaseServiceServer) mustEmbedUnimplementedBaseServiceServer() {}
func (UnimplementedBaseServiceServer) testEmbeddedByValue()                     {}

// UnsafeBaseServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BaseServiceServer will
// result in compilation errors.
type UnsafeBaseServiceServer interface {
	mustEmbedUnimplementedBaseServiceServer()
}

func RegisterBaseServiceServer(s grpc.ServiceRegistrar, srv BaseServiceServer) {
	// If the following call pancis, it indicates UnimplementedBaseServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&BaseService_ServiceDesc, srv)
}

func _BaseService_WeChatLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WeChatLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).WeChatLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_WeChatLogin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).WeChatLogin(ctx, req.(*WeChatLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_WeChatRegisterFast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WeChatRegisterFastReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).WeChatRegisterFast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_WeChatRegisterFast_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).WeChatRegisterFast(ctx, req.(*WeChatRegisterFastReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_LocationCommonSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocationCommonSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).LocationCommonSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_LocationCommonSearch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).LocationCommonSearch(ctx, req.(*LocationCommonSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_MediaPutPresignURLBatchGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MediaPutPresignURLBatchGetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).MediaPutPresignURLBatchGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_MediaPutPresignURLBatchGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).MediaPutPresignURLBatchGet(ctx, req.(*MediaPutPresignURLBatchGetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_PofpTypeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PofpTypeListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).PofpTypeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_PofpTypeList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).PofpTypeList(ctx, req.(*PofpTypeListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_PofpCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PofpCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).PofpCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_PofpCreate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).PofpCreate(ctx, req.(*PofpCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_PofpUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PofpUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).PofpUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_PofpUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).PofpUpdate(ctx, req.(*PofpUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_PofpDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PofpDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).PofpDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_PofpDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).PofpDelete(ctx, req.(*PofpDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_PofpBaseQueryByBound_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PofpBaseQueryByBoundReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).PofpBaseQueryByBound(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_PofpBaseQueryByBound_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).PofpBaseQueryByBound(ctx, req.(*PofpBaseQueryByBoundReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_PofpDetailQueryById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PofpDetailQueryByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).PofpDetailQueryById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_PofpDetailQueryById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).PofpDetailQueryById(ctx, req.(*PofpDetailQueryByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_PofpFullQueryById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PofpFullQueryByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).PofpFullQueryById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_PofpFullQueryById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).PofpFullQueryById(ctx, req.(*PofpFullQueryByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_PofpInteraction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PofpInteractionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).PofpInteraction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_PofpInteraction_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).PofpInteraction(ctx, req.(*PofpInteractionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseService_PofpComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PofpCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServiceServer).PofpComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BaseService_PofpComment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServiceServer).PofpComment(ctx, req.(*PofpCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

// BaseService_ServiceDesc is the grpc.ServiceDesc for BaseService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BaseService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "base_service.v1.BaseService",
	HandlerType: (*BaseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WeChatLogin",
			Handler:    _BaseService_WeChatLogin_Handler,
		},
		{
			MethodName: "WeChatRegisterFast",
			Handler:    _BaseService_WeChatRegisterFast_Handler,
		},
		{
			MethodName: "LocationCommonSearch",
			Handler:    _BaseService_LocationCommonSearch_Handler,
		},
		{
			MethodName: "MediaPutPresignURLBatchGet",
			Handler:    _BaseService_MediaPutPresignURLBatchGet_Handler,
		},
		{
			MethodName: "PofpTypeList",
			Handler:    _BaseService_PofpTypeList_Handler,
		},
		{
			MethodName: "PofpCreate",
			Handler:    _BaseService_PofpCreate_Handler,
		},
		{
			MethodName: "PofpUpdate",
			Handler:    _BaseService_PofpUpdate_Handler,
		},
		{
			MethodName: "PofpDelete",
			Handler:    _BaseService_PofpDelete_Handler,
		},
		{
			MethodName: "PofpBaseQueryByBound",
			Handler:    _BaseService_PofpBaseQueryByBound_Handler,
		},
		{
			MethodName: "PofpDetailQueryById",
			Handler:    _BaseService_PofpDetailQueryById_Handler,
		},
		{
			MethodName: "PofpFullQueryById",
			Handler:    _BaseService_PofpFullQueryById_Handler,
		},
		{
			MethodName: "PofpInteraction",
			Handler:    _BaseService_PofpInteraction_Handler,
		},
		{
			MethodName: "PofpComment",
			Handler:    _BaseService_PofpComment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "base-service.proto",
}
