// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.14.0
// source: channel.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 频道拓展类型
type ChannelExtType int32

const (
	ChannelExtType_CHANNEL_EXT_TYPE_UNSPECIFIED ChannelExtType = 0
	// 群组类型, 自由聊天话题
	ChannelExtType_CHANNEL_EXT_TYPE_GROUP ChannelExtType = 1
	// 位置类型, 分享聚合位置
	ChannelExtType_CHANNEL_EXT_TYPE_LOCATION ChannelExtType = 2
	// 功能类型, 提供服务
	ChannelExtType_CHANNEL_EXT_TYPE_FUNCTION ChannelExtType = 3
)

// Enum value maps for ChannelExtType.
var (
	ChannelExtType_name = map[int32]string{
		0: "CHANNEL_EXT_TYPE_UNSPECIFIED",
		1: "CHANNEL_EXT_TYPE_GROUP",
		2: "CHANNEL_EXT_TYPE_LOCATION",
		3: "CHANNEL_EXT_TYPE_FUNCTION",
	}
	ChannelExtType_value = map[string]int32{
		"CHANNEL_EXT_TYPE_UNSPECIFIED": 0,
		"CHANNEL_EXT_TYPE_GROUP":       1,
		"CHANNEL_EXT_TYPE_LOCATION":    2,
		"CHANNEL_EXT_TYPE_FUNCTION":    3,
	}
)

func (x ChannelExtType) Enum() *ChannelExtType {
	p := new(ChannelExtType)
	*p = x
	return p
}

func (x ChannelExtType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelExtType) Descriptor() protoreflect.EnumDescriptor {
	return file_channel_proto_enumTypes[0].Descriptor()
}

func (ChannelExtType) Type() protoreflect.EnumType {
	return &file_channel_proto_enumTypes[0]
}

func (x ChannelExtType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelExtType.Descriptor instead.
func (ChannelExtType) EnumDescriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{0}
}

// 频道信息
type ChannelInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 频道 ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 频道创建者
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// 频道拓展类型
	ExtType ChannelExtType `protobuf:"varint,3,opt,name=ext_type,json=extType,proto3,enum=channel.ChannelExtType" json:"ext_type,omitempty"`
	// 状态信息，只读
	Stats *ChannelStats `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	// 群组拓展
	GroupExt *ChannelExtGroup `protobuf:"bytes,11,opt,name=group_ext,json=groupExt,proto3" json:"group_ext,omitempty"`
	// 地点拓展
	LocationExt   *ChannelExtLocation `protobuf:"bytes,12,opt,name=location_ext,json=locationExt,proto3" json:"location_ext,omitempty"`
	CreatedAt     int64               `protobuf:"varint,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64               `protobuf:"varint,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelInfo) Reset() {
	*x = ChannelInfo{}
	mi := &file_channel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInfo) ProtoMessage() {}

func (x *ChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInfo.ProtoReflect.Descriptor instead.
func (*ChannelInfo) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChannelInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChannelInfo) GetExtType() ChannelExtType {
	if x != nil {
		return x.ExtType
	}
	return ChannelExtType_CHANNEL_EXT_TYPE_UNSPECIFIED
}

func (x *ChannelInfo) GetStats() *ChannelStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ChannelInfo) GetGroupExt() *ChannelExtGroup {
	if x != nil {
		return x.GroupExt
	}
	return nil
}

func (x *ChannelInfo) GetLocationExt() *ChannelExtLocation {
	if x != nil {
		return x.LocationExt
	}
	return nil
}

func (x *ChannelInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ChannelInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 频道状态, 只读
type ChannelStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 帖子数量
	PostsCnt   int32 `protobuf:"varint,1,opt,name=posts_cnt,json=postsCnt,proto3" json:"posts_cnt,omitempty"`
	LastPostAt int64 `protobuf:"varint,2,opt,name=last_post_at,json=lastPostAt,proto3" json:"last_post_at,omitempty"`
	// 收藏数, 收藏代表订阅
	StarsCnt   int32 `protobuf:"varint,3,opt,name=stars_cnt,json=starsCnt,proto3" json:"stars_cnt,omitempty"`
	LastStarAt int64 `protobuf:"varint,4,opt,name=last_star_at,json=lastStarAt,proto3" json:"last_star_at,omitempty"`
	// 点赞数, 点赞代表认可
	LikesCnt   int32 `protobuf:"varint,5,opt,name=likes_cnt,json=likesCnt,proto3" json:"likes_cnt,omitempty"`
	LastLikeAt int64 `protobuf:"varint,6,opt,name=last_like_at,json=lastLikeAt,proto3" json:"last_like_at,omitempty"`
	// 查看数
	ViewsCnt      int32 `protobuf:"varint,7,opt,name=views_cnt,json=viewsCnt,proto3" json:"views_cnt,omitempty"`
	UpdatedAt     int64 `protobuf:"varint,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelStats) Reset() {
	*x = ChannelStats{}
	mi := &file_channel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelStats) ProtoMessage() {}

func (x *ChannelStats) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelStats.ProtoReflect.Descriptor instead.
func (*ChannelStats) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{1}
}

func (x *ChannelStats) GetPostsCnt() int32 {
	if x != nil {
		return x.PostsCnt
	}
	return 0
}

func (x *ChannelStats) GetLastPostAt() int64 {
	if x != nil {
		return x.LastPostAt
	}
	return 0
}

func (x *ChannelStats) GetStarsCnt() int32 {
	if x != nil {
		return x.StarsCnt
	}
	return 0
}

func (x *ChannelStats) GetLastStarAt() int64 {
	if x != nil {
		return x.LastStarAt
	}
	return 0
}

func (x *ChannelStats) GetLikesCnt() int32 {
	if x != nil {
		return x.LikesCnt
	}
	return 0
}

func (x *ChannelStats) GetLastLikeAt() int64 {
	if x != nil {
		return x.LastLikeAt
	}
	return 0
}

func (x *ChannelStats) GetViewsCnt() int32 {
	if x != nil {
		return x.ViewsCnt
	}
	return 0
}

func (x *ChannelStats) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 频道群组拓展
type ChannelExtGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 频道名称标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 简介, 可更新
	Intro string `protobuf:"bytes,4,opt,name=intro,proto3" json:"intro,omitempty"`
	// 频道头像
	Avatar        *MediaInfo `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelExtGroup) Reset() {
	*x = ChannelExtGroup{}
	mi := &file_channel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelExtGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelExtGroup) ProtoMessage() {}

func (x *ChannelExtGroup) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelExtGroup.ProtoReflect.Descriptor instead.
func (*ChannelExtGroup) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{2}
}

func (x *ChannelExtGroup) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChannelExtGroup) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *ChannelExtGroup) GetAvatar() *MediaInfo {
	if x != nil {
		return x.Avatar
	}
	return nil
}

// 频道地点拓展
type ChannelExtLocation struct {
	state protoimpl.MessageState   `protogen:"open.v1"`
	Stats *ChannelExtLocationStats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	// 地点名字
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// POI 地址, 不可更新
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// 足迹位置, 不可更新
	Coord         *PointCoord `protobuf:"bytes,4,opt,name=coord,proto3" json:"coord,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelExtLocation) Reset() {
	*x = ChannelExtLocation{}
	mi := &file_channel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelExtLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelExtLocation) ProtoMessage() {}

func (x *ChannelExtLocation) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelExtLocation.ProtoReflect.Descriptor instead.
func (*ChannelExtLocation) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{3}
}

func (x *ChannelExtLocation) GetStats() *ChannelExtLocationStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ChannelExtLocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelExtLocation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ChannelExtLocation) GetCoord() *PointCoord {
	if x != nil {
		return x.Coord
	}
	return nil
}

type ChannelExtLocationStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 出现过的标记id
	MarkerIds []int32 `protobuf:"varint,1,rep,packed,name=marker_ids,json=markerIds,proto3" json:"marker_ids,omitempty"`
	// 足迹数量
	MarksCnt int32 `protobuf:"varint,2,opt,name=marks_cnt,json=marksCnt,proto3" json:"marks_cnt,omitempty"`
	// 最新足迹时间
	LastMarkAt int64 `protobuf:"varint,3,opt,name=last_mark_at,json=lastMarkAt,proto3" json:"last_mark_at,omitempty"`
	// 来过的狗狗数量
	PetsCnt       int32 `protobuf:"varint,4,opt,name=pets_cnt,json=petsCnt,proto3" json:"pets_cnt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelExtLocationStats) Reset() {
	*x = ChannelExtLocationStats{}
	mi := &file_channel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelExtLocationStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelExtLocationStats) ProtoMessage() {}

func (x *ChannelExtLocationStats) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelExtLocationStats.ProtoReflect.Descriptor instead.
func (*ChannelExtLocationStats) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{4}
}

func (x *ChannelExtLocationStats) GetMarkerIds() []int32 {
	if x != nil {
		return x.MarkerIds
	}
	return nil
}

func (x *ChannelExtLocationStats) GetMarksCnt() int32 {
	if x != nil {
		return x.MarksCnt
	}
	return 0
}

func (x *ChannelExtLocationStats) GetLastMarkAt() int64 {
	if x != nil {
		return x.LastMarkAt
	}
	return 0
}

func (x *ChannelExtLocationStats) GetPetsCnt() int32 {
	if x != nil {
		return x.PetsCnt
	}
	return 0
}

var File_channel_proto protoreflect.FileDescriptor

var file_channel_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x02, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x74,
	0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x87,
	0x02, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x43, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x73, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x73, 0x43, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x41, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x76, 0x69, 0x65, 0x77, 0x73, 0x43, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x68, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x28, 0x0a, 0x05, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x52, 0x05, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x17, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x5f, 0x63, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x43, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x74, 0x73, 0x5f, 0x63, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x74, 0x73, 0x43, 0x6e, 0x74, 0x2a, 0x8c,
	0x01, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x45, 0x58, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x45,
	0x58, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x01, 0x12,
	0x1d, 0x0a, 0x19, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x1d,
	0x0a, 0x19, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x42, 0x2d, 0x5a,
	0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x4f, 0x47, 0x54,
	0x54, 0x2f, 0x64, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_channel_proto_rawDescOnce sync.Once
	file_channel_proto_rawDescData []byte
)

func file_channel_proto_rawDescGZIP() []byte {
	file_channel_proto_rawDescOnce.Do(func() {
		file_channel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_channel_proto_rawDesc), len(file_channel_proto_rawDesc)))
	})
	return file_channel_proto_rawDescData
}

var file_channel_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_channel_proto_goTypes = []any{
	(ChannelExtType)(0),             // 0: channel.ChannelExtType
	(*ChannelInfo)(nil),             // 1: channel.ChannelInfo
	(*ChannelStats)(nil),            // 2: channel.ChannelStats
	(*ChannelExtGroup)(nil),         // 3: channel.ChannelExtGroup
	(*ChannelExtLocation)(nil),      // 4: channel.ChannelExtLocation
	(*ChannelExtLocationStats)(nil), // 5: channel.ChannelExtLocationStats
	(*MediaInfo)(nil),               // 6: common.MediaInfo
	(*PointCoord)(nil),              // 7: common.PointCoord
}
var file_channel_proto_depIdxs = []int32{
	0, // 0: channel.ChannelInfo.ext_type:type_name -> channel.ChannelExtType
	2, // 1: channel.ChannelInfo.stats:type_name -> channel.ChannelStats
	3, // 2: channel.ChannelInfo.group_ext:type_name -> channel.ChannelExtGroup
	4, // 3: channel.ChannelInfo.location_ext:type_name -> channel.ChannelExtLocation
	6, // 4: channel.ChannelExtGroup.avatar:type_name -> common.MediaInfo
	5, // 5: channel.ChannelExtLocation.stats:type_name -> channel.ChannelExtLocationStats
	7, // 6: channel.ChannelExtLocation.coord:type_name -> common.PointCoord
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_channel_proto_init() }
func file_channel_proto_init() {
	if File_channel_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_channel_proto_rawDesc), len(file_channel_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_channel_proto_goTypes,
		DependencyIndexes: file_channel_proto_depIdxs,
		EnumInfos:         file_channel_proto_enumTypes,
		MessageInfos:      file_channel_proto_msgTypes,
	}.Build()
	File_channel_proto = out.File
	file_channel_proto_goTypes = nil
	file_channel_proto_depIdxs = nil
}
