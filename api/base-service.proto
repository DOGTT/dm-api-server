syntax = "proto3";

package base_service.v1;
option go_package="github.com/DOGTT/dm-api-server/api/base;api";

import "common.proto";
import "channel.proto";
import "pet.proto";
import "user.proto";
import "google/api/annotations.proto";

// 通用业务服务接口定义.
/**
servers:
  - url: http://localhost:8080
**/

// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
service BaseService {

    // 微信小程序登录接口
    // @security BearerAuth
    rpc WeChatLogin(WeChatLoginReq) returns (WeChatLoginResp) {
        option (google.api.http) = {
            post: "/v1/user/wx/login"
            body: "*"
        };
    }
    // 微信小程序快速登录注册接口定义
    rpc WeChatRegisterFast(WeChatRegisterFastReq) returns (WeChatRegisterFastResp) {
        option (google.api.http) = {
            post: "/v1/user/wx/reg/fast"
            body: "*"
        };
    }

    // 通用地点搜索
    rpc LocationCommonSearch(LocationCommonSearchReq) returns (LocationCommonSearchResp) {
        option (google.api.http) = {
            get: "/v1/location/search"
        };
    }

    // 批量获取对象上传预签名URL
    rpc MediaPutPresignURLBatchGet(MediaPutPresignURLBatchGetReq) returns (MediaPutPresignURLBatchGetResp) {
        option (google.api.http) = {
            get: "/v1/media/put_presign_url/batch"
        };
    }

    // 列表查询足迹频道类型
    rpc FpcTypeList(FpcTypeListReq) returns (FpcTypeListResp) {
        option (google.api.http) = {
            get: "/v1/fpc/type"
        };
    }

    // 创建足迹频道
    rpc FpcCreate(FpcCreateReq) returns (FpcCreateResp) {
        option (google.api.http) = {
            post: "/v1/fpc"
            body: "*"
        };
    }

    // 更新足迹频道
    rpc FpcUpdate(FpcUpdateReq) returns (FpcUpdateResp) {
        option (google.api.http) = {
            put: "/v1/fpc"
            body: "*"
        };
    }
    
    // 删除足迹频道
    rpc FpcDelete(FpcDeleteReq) returns (FpcDeleteResp) {
        option (google.api.http) = {
            delete: "/v1/fpc"
        };
    }
    
    // 按照范围查询足迹基础信息
    rpc FpcBaseQueryByBound(FpcBaseQueryByBoundReq) returns (FpcBaseQueryByBoundResp) {
        option (google.api.http) = {
            post: "/v1/fpc/base_query_by_bound"
            body: "*"
        };
    }
    
    // 按照id查询足迹静态完整信息
    rpc FpcDetailQueryById(FpcDetailQueryByIdReq) returns (FpcDetailQueryByIdResp) {
        option (google.api.http) = {
            get: "/v1/fpc/detail_query_by_id"
        };
    }

    // 按照id查询足迹频道动态信息
    rpc FpcFullQueryById(FpcFullQueryByIdReq) returns (FpcFullQueryByIdResp) {
        option (google.api.http) = {
            get: "/v1/fpc/full_query_by_id"
        };
    }

    // 足迹频道互动
    rpc FpcInteraction(FpcInteractionReq) returns (FpcInteractionResp) {
        option (google.api.http) = {
            post: "/v1/fpc/interaction"
            body: "*"
        };
    }
    
    // 足迹频道评论
    rpc FpcComment(FpcCommentReq) returns (FpcCommentResp) {
        option (google.api.http) = {
            post: "/v1/fpc/comment"
            body: "*"
        };
    }

    // 评论加载


    // 最新评论查询
}

// 通用错误消息结构
message ErrorMessage {
    string code = 1;
    string desc = 2;
}


// 登录请求
message WeChatLoginReq {
    string wx_code = 1; // 微信小程序登录时获取临时登录凭证code
}

message WeChatLoginResp {
    string token = 1;
    user.UserInfo user_info = 2;
}


// 宠物注册信息
message PetInfoReg {
    // 名字
    string name = 1;
    // base64 data
    bytes avatar_data = 2;
}

// 快速注册请求
message WeChatRegisterFastReq {
    string wx_code = 1;
    user.PetInfoReg pet = 2;
}

message WeChatRegisterFastResp {
    string token = 1;
    user.UserInfo user_info = 2;
}

// 通用地点搜索请求
message LocationCommonSearchReq {
    string input = 1;
}

message LocationCommonSearchResp {
    //TODO
}


// 批量获取对象上传预签名URL请求
message MediaPutPresignURLBatchGetReq {
    common.MediaType media_type  = 1;
    int32 count = 2;
}

message MediaPutPresignURLBatchGetResp {
    repeated common.MediaInfo media = 1;
}

message FpcTypeListReq {

}

message FpcTypeListResp {
    repeated fpc.FpcTypeInfo pofp_types = 1;
}

// 足迹创建
message FpcCreateReq {
    fpc.FpcInfo fpc = 1;
}

message FpcCreateResp {
    fpc.FpcInfo fpc = 1;
}

// 足迹更新
message FpcUpdateReq {
    fpc.FpcInfo fpc = 1;
}

message FpcUpdateResp {

}

// 足迹删除
message FpcDeleteReq {
    string uuid = 1;
}

message FpcDeleteResp {

}

message FpcBaseQueryByBoundReq {
    // 足迹类型id列表
    repeated int32 type_ids = 1;
    // 坐标范围
    common.BoundCoord bound = 2;
}

message FpcBaseQueryByBoundResp {
    repeated fpc.FpcInfo pofps = 1;
}

message FpcDetailQueryByIdReq {
    string uuid = 1;
}

message FpcDetailQueryByIdResp {
    fpc.FpcInfo fpc = 1;
    fpc.FpcDynamicInfo pofp_dynamic_info = 2;
}

message FpcFullQueryByIdReq {
    string uuid = 1;
}

message FpcFullQueryByIdResp {
    fpc.FpcInfo fpc = 1;
    fpc.FpcDynamicInfo pofp_dynamic_info = 2;
}

// 状态互动类型
enum StateInxType {
    DEFAULT = 0;
    // 喜欢/收藏/关注/想去
    LIKE = 1;
    // 标记， 代表曾经来过/ 去过
    MARK = 2;
}

// 事件互动类型
enum EventInxType {
    DEFAULT = 0;
    // 到达
    ARRIVE = 1;
    // 评论
    COMMENT = 2;
    // 加入
    JOIN = 3;
    // 攻略
    GUIDE = 4;
}

// 互动类型
enum InteractionType {
    STATE_INX = 0;
    EVENT_INX = 1;
}

message FpcInteractionReq {
    string uuid = 1;
    // 互动类型
    InteractionType ixn_type = 2;
}

message FpcInteractionResp {

}

message FpcCommentReq {
    fpc.FpcCommentInfo comment = 1;
}

message FpcCommentResp {

}