syntax = "proto3";

package base_service.v1;
option go_package="github.com/DOGTT/dm-api-server/api/base;api";

import "common.proto";
import "pofp.proto";
import "user.proto";
import "google/api/annotations.proto";

// 通用业务服务接口定义.
/**
servers:
  - url: http://localhost:8080
**/

// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
service BaseService {

    // 微信小程序登录接口
    // @security BearerAuth
    rpc WeChatLogin(WeChatLoginReq) returns (WeChatLoginResp) {
        option (google.api.http) = {
            post: "/v1/user/wx/login"
            body: "*"
        };
    }
    // 微信小程序快速登录注册接口定义
    rpc WeChatRegisterFast(WeChatRegisterFastReq) returns (WeChatRegisterFastResp) {
        option (google.api.http) = {
            post: "/v1/user/wx/reg/fast"
            body: "*"
        };
    }

    // 通用地点搜索
    rpc LocationCommonSearch(LocationCommonSearchReq) returns (LocationCommonSearchResp) {
        option (google.api.http) = {
            get: "/v1/location/search"
        };
    }

    // 批量获取对象上传预签名URL
    rpc MediaPutPresignURLBatchGet(MediaPutPresignURLBatchGetReq) returns (MediaPutPresignURLBatchGetResp) {
        option (google.api.http) = {
            get: "/v1/media/put_presign_url/batch"
        };
    }

    // 列表查询足迹点类型
    rpc PofpTypeList(PofpTypeListReq) returns (PofpTypeListResp) {
        option (google.api.http) = {
            get: "/v1/popf/type"
        };
    }

    // 创建足迹点
    rpc PofpCreate(PofpCreateReq) returns (PofpCreateResp) {
        option (google.api.http) = {
            post: "/v1/popf"
            body: "*"
        };
    }

    // 更新足迹点
    rpc PofpUpdate(PofpUpdateReq) returns (PofpUpdateResp) {
        option (google.api.http) = {
            put: "/v1/popf"
            body: "*"
        };
    }
    
    // 删除足迹点
    rpc PofpDelete(PofpDeleteReq) returns (PofpDeleteResp) {
        option (google.api.http) = {
            delete: "/v1/popf"
        };
    }
    
    // 按照范围查询足迹基础信息
    rpc PofpBaseQueryByBound(PofpBaseQueryByBoundReq) returns (PofpBaseQueryByBoundResp) {
        option (google.api.http) = {
            post: "/v1/popf/base_query_by_bound"
            body: "*"
        };
    }
    
    // 按照id查询足迹简要信息
    rpc PofpDetailQueryById(PofpDetailQueryByIdReq) returns (PofpDetailQueryByIdResp) {
        option (google.api.http) = {
            get: "/v1/popf/detail_query_by_id"
        };
    }

    // 按照id查询足迹页完整信息
    rpc PofpFullQueryById(PofpFullQueryByIdReq) returns (PofpFullQueryByIdResp) {
        option (google.api.http) = {
            get: "/v1/popf/full_query_by_id"
        };
    }

    // 足迹点互动
    rpc PofpInteraction(PofpInteractionReq) returns (PofpInteractionResp) {
        option (google.api.http) = {
            post: "/v1/popf/interaction"
            body: "*"
        };
    }
    
    // 足迹点评论
    rpc PofpComment(PofpCommentReq) returns (PofpCommentResp) {
        option (google.api.http) = {
            post: "/v1/popf/comment"
            body: "*"
        };
    }
}

// 通用错误消息结构
message ErrorMessage {
    string code = 1;
    string desc = 2;
}


// 登录请求
message WeChatLoginReq {
    string wx_code = 1; // 微信小程序登录时获取临时登录凭证code
}

message WeChatLoginResp {
    string token = 1;
    user.UserInfo user_info = 2;
}

// 快速注册请求
message WeChatRegisterFastReq {
    string wx_code = 1;
    user.PetInfoReg pet = 2;
}

message WeChatRegisterFastResp {
    string token = 1;
    user.UserInfo user_info = 2;
}

// 通用地点搜索请求
message LocationCommonSearchReq {
    string input = 1;
}

message LocationCommonSearchResp {
    //TODO
}


// 批量获取对象上传预签名URL请求
message MediaPutPresignURLBatchGetReq {
    common.MediaType media_type  = 1;
    int32 count = 2;
}

message MediaPutPresignURLBatchGetResp {
    repeated common.MediaInfo media = 1;
}

message PofpTypeListReq {

}

message PofpTypeListResp {
    repeated pofp.PofpTypeInfo pofp_types = 1;
}

// 足迹创建
message PofpCreateReq {
    pofp.PofpInfo pofp = 1;
}

message PofpCreateResp {
    pofp.PofpInfo pofp = 1;
}

// 足迹更新
message PofpUpdateReq {
    pofp.PofpInfo pofp = 1;
}

message PofpUpdateResp {

}

// 足迹删除
message PofpDeleteReq {
    string uuid = 1;
}

message PofpDeleteResp {

}

message PofpBaseQueryByBoundReq {
    // 足迹类型id列表
    repeated int32 type_ids = 1;
    // 坐标范围
    common.BoundCoord bound = 2;
}

message PofpBaseQueryByBoundResp {
    repeated pofp.PofpInfo pofps = 1;
}

message PofpDetailQueryByIdReq {
    string uuid = 1;
}

message PofpDetailQueryByIdResp {
    pofp.PofpInfo pofp = 1;
    pofp.PofpDynamicInfo pofp_dynamic_info = 2;
}

message PofpFullQueryByIdReq {
    string uuid = 1;
}

message PofpFullQueryByIdResp {
    pofp.PofpInfo pofp = 1;
    pofp.PofpDynamicInfo pofp_dynamic_info = 2;
}

// 状态互动类型
enum StateInxType {
    DEFAULT = 0;
    // 喜欢/收藏/关注
    LIKE = 1;
    // 标记， 代表曾经来过
    MARK = 2;
}

// 事件互动类型
enum EventInxType {
    DEFAULT = 0;
    // 到达
    ARRIVE = 1;
    // 评论
    COMMENT = 2;
    // 加入
    JOIN = 3;
}

// 互动类型
enum InteractionType {
    STATE_INX = 0;
    EVENT_INX = 1;
}

message PofpInteractionReq {
    string uuid = 1;
    // 互动类型
    InteractionType ixn_type = 2;
}

message PofpInteractionResp {

}

message PofpCommentReq {
    pofp.PofpCommentInfo comment = 1;
}

message PofpCommentResp {

}